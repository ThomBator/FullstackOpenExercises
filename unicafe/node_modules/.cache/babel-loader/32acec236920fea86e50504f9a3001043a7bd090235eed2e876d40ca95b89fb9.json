{"ast":null,"code":"var _jsxFileName = \"/mnt/LinuxData/Projects/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"./Button\";\nimport Statistics from \"./Statistics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const [feedback, setFeedback] = useState(false);\n  const goodClick = () => {\n    const newGood = good + 1;\n    setGood(newGood);\n    const divisor = newGood + bad + neutral;\n    setAvg((newGood * 1 + neutral * 0 + bad * -1) / divisor);\n    setTotal(newGood + neutral + bad);\n    setPositive(newGood / divisor * 100);\n    setFeedback(true);\n  };\n  const badClick = () => {\n    const newBad = bad + 1;\n    setBad(newBad);\n    const divisor = good + newBad + neutral;\n    setAvg((good * 1 + neutral * 0 + newBad * -1) / divisor);\n    setTotal(good + neutral + newBad);\n    setPositive(good / divisor * 100);\n    setFeedback(true);\n  };\n  const neutralClick = () => {\n    const newNeutral = neutral + 1;\n    setNeutral(newNeutral);\n    const divisor = good + bad + newNeutral;\n    setAvg((good * 1 + newNeutral * 0 + bad * -1) / divisor);\n    setTotal(good + newNeutral + bad);\n    setPositive(good / divisor * 100);\n    setFeedback(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: goodClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: neutralClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: badClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      total: total,\n      avg: avg,\n      positive: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HlXtCgPR8rotOUgzAiAhH93gEnI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Button","Statistics","jsxDEV","_jsxDEV","App","_s","good","setGood","neutral","setNeutral","bad","setBad","avg","setAvg","total","setTotal","positive","setPositive","feedback","setFeedback","goodClick","newGood","divisor","badClick","newBad","neutralClick","newNeutral","children","fileName","_jsxFileName","lineNumber","columnNumber","text","handleClick","_c","$RefreshReg$"],"sources":["/mnt/LinuxData/Projects/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Button from \"./Button\";\nimport Statistics from \"./Statistics\";\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const [feedback, setFeedback] = useState(false);\n\n  const goodClick = () => {\n    const newGood = good + 1;\n    setGood(newGood);\n    const divisor = newGood + bad + neutral;\n    setAvg((newGood * 1 + neutral * 0 + bad * -1) / divisor);\n    setTotal(newGood + neutral + bad);\n    setPositive((newGood / divisor) * 100);\n    setFeedback(true);\n  };\n\n  const badClick = () => {\n    const newBad = bad + 1;\n    setBad(newBad);\n    const divisor = good + newBad + neutral;\n    setAvg((good * 1 + neutral * 0 + newBad * -1) / divisor);\n    setTotal(good + neutral + newBad);\n    setPositive((good / divisor) * 100);\n    setFeedback(true);\n  };\n\n  const neutralClick = () => {\n    const newNeutral = neutral + 1;\n    setNeutral(newNeutral);\n    const divisor = good + bad + newNeutral;\n    setAvg((good * 1 + newNeutral * 0 + bad * -1) / divisor);\n    setTotal(good + newNeutral + bad);\n    setPositive((good / divisor) * 100);\n    setFeedback(true);\n  };\n\n  return (\n    <div>\n      <h2>give feedback</h2>\n      <Button text={\"good\"} handleClick={goodClick} />\n      <Button text={\"neutral\"} handleClick={neutralClick} />\n      <Button text={\"bad\"} handleClick={badClick} />\n      {feedback && (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          avg={avg}\n          positive={positive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}