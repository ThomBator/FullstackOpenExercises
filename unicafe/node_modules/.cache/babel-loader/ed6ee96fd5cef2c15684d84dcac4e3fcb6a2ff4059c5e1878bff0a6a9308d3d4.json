{"ast":null,"code":"var _jsxFileName = \"/mnt/LinuxData/Projects/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const goodClick = () => {\n    const newGood = good + 1;\n    setGood(newGood);\n    setAvg(newGood + neutral + bad / 3);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: goodClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: () => setNeutral(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", avg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OhjoUKwhqRRx3AUk9ff3jFD15ec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Button","jsxDEV","_jsxDEV","App","_s","good","setGood","neutral","setNeutral","bad","setBad","avg","setAvg","goodClick","newGood","children","fileName","_jsxFileName","lineNumber","columnNumber","text","handleClick","_c","$RefreshReg$"],"sources":["/mnt/LinuxData/Projects/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Button from \"./Button\";\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [avg, setAvg] = useState(0);\n\n  const goodClick = () => {\n    const newGood = good + 1;\n    setGood(newGood);\n    setAvg(newGood + neutral + bad / 3);\n  };\n\n  return (\n    <div>\n      <h2>give feedback</h2>\n      <Button text={\"good\"} handleClick={goodClick} />\n      <Button text={\"neutral\"} handleClick={() => setNeutral(neutral + 1)} />\n      <Button text={\"bad\"} handleClick={() => setBad(bad + 1)} />\n      <h2>statistics</h2>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>average {avg}</p>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMc,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,OAAO,GAAGT,IAAI,GAAG,CAAC;IACxBC,OAAO,CAACQ,OAAO,CAAC;IAChBF,MAAM,CAACE,OAAO,GAAGP,OAAO,GAAGE,GAAG,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBjB,OAAA,CAACF,MAAM;MAACoB,IAAI,EAAE,MAAO;MAACC,WAAW,EAAER;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChDjB,OAAA,CAACF,MAAM;MAACoB,IAAI,EAAE,SAAU;MAACC,WAAW,EAAEA,CAAA,KAAMb,UAAU,CAACD,OAAO,GAAG,CAAC;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvEjB,OAAA,CAACF,MAAM;MAACoB,IAAI,EAAE,KAAM;MAACC,WAAW,EAAEA,CAAA,KAAMX,MAAM,CAACD,GAAG,GAAG,CAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC3DjB,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnBjB,OAAA;MAAAa,QAAA,GAAG,OAAK,EAACV,IAAI;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClBjB,OAAA;MAAAa,QAAA,GAAG,UAAQ,EAACR,OAAO;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxBjB,OAAA;MAAAa,QAAA,GAAG,MAAI,EAACN,GAAG;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAChBjB,OAAA;MAAAa,QAAA,GAAG,UAAQ,EAACJ,GAAG;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChB;AAEV,CAAC;AAACf,EAAA,CA1BID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}