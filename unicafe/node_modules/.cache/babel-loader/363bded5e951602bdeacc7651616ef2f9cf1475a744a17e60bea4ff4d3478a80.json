{"ast":null,"code":"var _jsxFileName = \"/mnt/LinuxData/Projects/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"./Button\";\nimport Statistics from \"./Statistics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const goodClick = () => {\n    const newGood = good + 1;\n    setGood(newGood);\n    const divisor = newGood + bad + neutral;\n    setAvg((newGood * 1 + neutral * 0 + bad * -1) / divisor);\n    setTotal(newGood + neutral + bad);\n    setPositive(newGood / divisor * 100);\n  };\n  const badClick = () => {\n    const newBad = bad + 1;\n    setBad(newBad);\n    const divisor = good + newBad + neutral;\n    setAvg((good * 1 + neutral * 0 + newBad * -1) / divisor);\n    setTotal(good + neutral + newBad);\n    setPositive(good / divisor * 100);\n  };\n  const neutralClick = () => {\n    const newNeutral = neutral + 1;\n    setNeutral(newNeutral);\n    const divisor = good + bad + newNeutral;\n    setAvg((good * 1 + newNeutral * 0 + bad * -1) / divisor);\n    setTotal(good + newNeutral + bad);\n    setPositive(good / divisor * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: goodClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: neutralClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: badClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      total: total,\n      avg: avg,\n      positive: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"335AjxExHK83lHt8RBunG+Ll8lw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Button","Statistics","jsxDEV","_jsxDEV","App","_s","good","setGood","neutral","setNeutral","bad","setBad","avg","setAvg","total","setTotal","positive","setPositive","goodClick","newGood","divisor","badClick","newBad","neutralClick","newNeutral","children","fileName","_jsxFileName","lineNumber","columnNumber","text","handleClick","_c","$RefreshReg$"],"sources":["/mnt/LinuxData/Projects/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Button from \"./Button\";\nimport Statistics from \"./Statistics\";\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positive, setPositive] = useState(0);\n\n  const goodClick = () => {\n    const newGood = good + 1;\n    setGood(newGood);\n    const divisor = newGood + bad + neutral;\n    setAvg((newGood * 1 + neutral * 0 + bad * -1) / divisor);\n    setTotal(newGood + neutral + bad);\n    setPositive((newGood / divisor) * 100);\n  };\n\n  const badClick = () => {\n    const newBad = bad + 1;\n    setBad(newBad);\n    const divisor = good + newBad + neutral;\n    setAvg((good * 1 + neutral * 0 + newBad * -1) / divisor);\n    setTotal(good + neutral + newBad);\n    setPositive((good / divisor) * 100);\n  };\n\n  const neutralClick = () => {\n    const newNeutral = neutral + 1;\n    setNeutral(newNeutral);\n    const divisor = good + bad + newNeutral;\n    setAvg((good * 1 + newNeutral * 0 + bad * -1) / divisor);\n    setTotal(good + newNeutral + bad);\n    setPositive((good / divisor) * 100);\n  };\n\n  return (\n    <div>\n      <h2>give feedback</h2>\n      <Button text={\"good\"} handleClick={goodClick} />\n      <Button text={\"neutral\"} handleClick={neutralClick} />\n      <Button text={\"bad\"} handleClick={badClick} />\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={total}\n        avg={avg}\n        positive={positive}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMmB,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,OAAO,GAAGb,IAAI,GAAG,CAAC;IACxBC,OAAO,CAACY,OAAO,CAAC;IAChB,MAAMC,OAAO,GAAGD,OAAO,GAAGT,GAAG,GAAGF,OAAO;IACvCK,MAAM,CAAC,CAACM,OAAO,GAAG,CAAC,GAAGX,OAAO,GAAG,CAAC,GAAGE,GAAG,GAAG,CAAC,CAAC,IAAIU,OAAO,CAAC;IACxDL,QAAQ,CAACI,OAAO,GAAGX,OAAO,GAAGE,GAAG,CAAC;IACjCO,WAAW,CAAEE,OAAO,GAAGC,OAAO,GAAI,GAAG,CAAC;EACxC,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,MAAM,GAAGZ,GAAG,GAAG,CAAC;IACtBC,MAAM,CAACW,MAAM,CAAC;IACd,MAAMF,OAAO,GAAGd,IAAI,GAAGgB,MAAM,GAAGd,OAAO;IACvCK,MAAM,CAAC,CAACP,IAAI,GAAG,CAAC,GAAGE,OAAO,GAAG,CAAC,GAAGc,MAAM,GAAG,CAAC,CAAC,IAAIF,OAAO,CAAC;IACxDL,QAAQ,CAACT,IAAI,GAAGE,OAAO,GAAGc,MAAM,CAAC;IACjCL,WAAW,CAAEX,IAAI,GAAGc,OAAO,GAAI,GAAG,CAAC;EACrC,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,UAAU,GAAGhB,OAAO,GAAG,CAAC;IAC9BC,UAAU,CAACe,UAAU,CAAC;IACtB,MAAMJ,OAAO,GAAGd,IAAI,GAAGI,GAAG,GAAGc,UAAU;IACvCX,MAAM,CAAC,CAACP,IAAI,GAAG,CAAC,GAAGkB,UAAU,GAAG,CAAC,GAAGd,GAAG,GAAG,CAAC,CAAC,IAAIU,OAAO,CAAC;IACxDL,QAAQ,CAACT,IAAI,GAAGkB,UAAU,GAAGd,GAAG,CAAC;IACjCO,WAAW,CAAEX,IAAI,GAAGc,OAAO,GAAI,GAAG,CAAC;EACrC,CAAC;EAED,oBACEjB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtB1B,OAAA,CAACH,MAAM;MAAC8B,IAAI,EAAE,MAAO;MAACC,WAAW,EAAEb;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChD1B,OAAA,CAACH,MAAM;MAAC8B,IAAI,EAAE,SAAU;MAACC,WAAW,EAAER;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtD1B,OAAA,CAACH,MAAM;MAAC8B,IAAI,EAAE,KAAM;MAACC,WAAW,EAAEV;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9C1B,OAAA,CAACF,UAAU;MACTK,IAAI,EAAEA,IAAK;MACXE,OAAO,EAAEA,OAAQ;MACjBE,GAAG,EAAEA,GAAI;MACTI,KAAK,EAAEA,KAAM;MACbF,GAAG,EAAEA,GAAI;MACTI,QAAQ,EAAEA;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACxB,EAAA,CApDID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAsDT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}